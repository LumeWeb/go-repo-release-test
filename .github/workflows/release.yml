name: Release

on:
  push:
    branches:
      - "**"
    paths:
      - '.changeset/**'
    tags:
      - '**'
  pull_request:
    types:
      - closed
    branches:
      - '**'
    paths:
      - '.changeset/**'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Versioner Setup
        id: versioner
        run: |
          json="{\"name\":\"@${{ github.repository }}\",\"private\":true,\"version\":\"{VERSION}\",\"packageManager\":\"pnpm@8.8.0\"}"
          initialVersion="0.0.0"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global init.defaultBranch ${{ github.ref_name }}
          if [ ! -f ".version" ]; then
            touch .gitignore
            if ! grep -q "package.json" .gitignore; then
              echo "package.json" >> .gitignore
            fi
            if ! grep -q "node_modules" .gitignore; then
              echo "node_modules" >> .gitignore
            fi
            if ! grep -q "pnpm-lock.yaml" .gitignore; then
              echo "pnpm-lock.yaml" >> .gitignore
            fi
            echo "$initialVersion" > .version
            git add .version .gitignore
            git commit -m "chore: versioning setup"
            git push
          fi
          echo $json > package.json
          sed -i "s/{VERSION}/$(cat .version)/g" package.json
          cat package.json
          echo "VERSION=$(cat .version)" >> $GITHUB_OUTPUT
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v4
        if: github.event_name == 'push'
      - name: Install Dependencies
        if: github.event_name == 'push'
        run: |
          pnpm add @changesets/cli
      - name: Setup Node Path
        if: github.event_name == 'push'
        run: |
          echo "${{ github.workspace }}/node_modules/.bin" >> $GITHUB_PATH
      - uses: pnpm/action-setup@v4
      - name: Create Release Pull Request
        if: github.event_name == 'push'
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update Version
        if: github.event_name == 'push' && steps.changesets.outputs.pullRequestNumber
        run: |
          version=$(jq -r .version package.json)
          git checkout changeset-release/${{ github.ref_name }}
          echo $version > .version
          git add .version
          git commit --amend --no-edit
          git push --force --set-upstream origin changeset-release/${{ github.ref_name }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'changeset-release/')
        with:
          generate_release_notes: true
          make_latest: true
          tag_name: "v${{ steps.versioner.outputs.version }}"
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.GITHUB_TOKEN }}